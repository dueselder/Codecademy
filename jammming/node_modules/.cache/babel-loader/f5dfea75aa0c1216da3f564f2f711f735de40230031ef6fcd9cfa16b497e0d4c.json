{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cdues\\\\OneDrive\\\\Kurse\\\\Web Development\\\\cc_jammming\\\\jammming\\\\src\\\\components\\\\Playlist\\\\Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Playlist.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Tracklist from '../TrackList/TrackList';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playlist({\n  playlistName,\n  playlistTracks,\n  updatePlaylistName,\n  onRemove\n}) {\n  _s();\n  const [newPlaylistName, setNewPlaylistName] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: \"playlist\",\n    elevation: 0,\n    sx: {\n      backgroundColor: 'rgba(255, 255, 255, 0.3)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      gutterBottom: true,\n      sx: {\n        color: 'white'\n      },\n      className: \"playlist-title\",\n      children: playlistName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      size: \"small\",\n      label: \"New Playlist\",\n      variant: \"outlined\",\n      sx: {\n        marginBottom: 2,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        '& .MuiOutlinedInput-root': {\n          '& fieldset': {\n            borderColor: 'white'\n          },\n          '&:hover fieldset': {\n            borderColor: 'white'\n          },\n          '&.Mui-focused fieldset': {\n            borderColor: 'white'\n          }\n        }\n      },\n      value: newPlaylistName,\n      onChange: e => setNewPlaylistName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        marginY: 2\n      },\n      onClick: () => {\n        updatePlaylistName(newPlaylistName);\n        setNewPlaylistName(\"\");\n      },\n      children: \"SAVE TO SPOTIFY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tracklist, {\n      tracks: playlistTracks,\n      onRemove: onRemove,\n      isRemovable: false // Set this to false since we're adding tracks\n      ,\n      playlistTracks: playlistTracks // Pass playlist tracks for comparison\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Playlist, \"N3/tKHcpsadldey6jGRa9e1bfIw=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","Button","TextField","Tracklist","Paper","Typography","jsxDEV","_jsxDEV","Playlist","playlistName","playlistTracks","updatePlaylistName","onRemove","_s","newPlaylistName","setNewPlaylistName","className","elevation","sx","backgroundColor","children","variant","component","gutterBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","size","label","marginBottom","borderColor","value","onChange","e","target","marginY","onClick","tracks","isRemovable","_c","$RefreshReg$"],"sources":["C:/Users/cdues/OneDrive/Kurse/Web Development/cc_jammming/jammming/src/components/Playlist/Playlist.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Playlist.css';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Tracklist from '../TrackList/TrackList';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction Playlist({ playlistName, playlistTracks, updatePlaylistName, onRemove }) {\r\n  const [newPlaylistName, setNewPlaylistName] = useState(\"\");\r\n\r\n\r\n\r\n  return (\r\n    <Paper className=\"playlist\" elevation={0} sx={{ backgroundColor: 'rgba(255, 255, 255, 0.3)' }}>\r\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom sx={{ color: 'white' }} className=\"playlist-title\">\r\n        {playlistName}\r\n      </Typography>\r\n      <TextField \r\n        fullWidth \r\n        size=\"small\" \r\n        label=\"New Playlist\" \r\n        variant=\"outlined\" \r\n        sx={{ \r\n          marginBottom: 2, \r\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n          '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n            '&:hover fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n          },\r\n        }}\r\n        value={newPlaylistName}\r\n        onChange={(e) => setNewPlaylistName(e.target.value)}\r\n      />\r\n\r\n      <Button \r\n        variant=\"contained\" \r\n        color=\"primary\"\r\n        sx={{ marginY: 2 }}\r\n        onClick={() => {\r\n          updatePlaylistName(newPlaylistName);\r\n          setNewPlaylistName(\"\");\r\n        }}\r\n      >\r\n        SAVE TO SPOTIFY\r\n      </Button>\r\n\r\n      <Tracklist \r\n        tracks={playlistTracks} \r\n        onRemove={onRemove}\r\n        isRemovable={false} // Set this to false since we're adding tracks\r\n        playlistTracks={playlistTracks} // Pass playlist tracks for comparison\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Playlist;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,QAAQA,CAAC;EAAEC,YAAY;EAAEC,cAAc;EAAEC,kBAAkB;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAI1D,oBACEO,OAAA,CAACH,KAAK;IAACY,SAAS,EAAC,UAAU;IAACC,SAAS,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,eAAe,EAAE;IAA2B,CAAE;IAAAC,QAAA,gBAC5Fb,OAAA,CAACF,UAAU;MAACgB,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACL,EAAE,EAAE;QAAEM,KAAK,EAAE;MAAQ,CAAE;MAACR,SAAS,EAAC,gBAAgB;MAAAI,QAAA,EACpGX;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACbrB,OAAA,CAACL,SAAS;MACR2B,SAAS;MACTC,IAAI,EAAC,OAAO;MACZC,KAAK,EAAC,cAAc;MACpBV,OAAO,EAAC,UAAU;MAClBH,EAAE,EAAE;QACFc,YAAY,EAAE,CAAC;QACfb,eAAe,EAAE,oBAAoB;QACrC,0BAA0B,EAAE;UAC1B,YAAY,EAAE;YACZc,WAAW,EAAE;UACf,CAAC;UACD,kBAAkB,EAAE;YAClBA,WAAW,EAAE;UACf,CAAC;UACD,wBAAwB,EAAE;YACxBA,WAAW,EAAE;UACf;QACF;MACF,CAAE;MACFC,KAAK,EAAEpB,eAAgB;MACvBqB,QAAQ,EAAGC,CAAC,IAAKrB,kBAAkB,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eAEFrB,OAAA,CAACN,MAAM;MACLoB,OAAO,EAAC,WAAW;MACnBG,KAAK,EAAC,SAAS;MACfN,EAAE,EAAE;QAAEoB,OAAO,EAAE;MAAE,CAAE;MACnBC,OAAO,EAAEA,CAAA,KAAM;QACb5B,kBAAkB,CAACG,eAAe,CAAC;QACnCC,kBAAkB,CAAC,EAAE,CAAC;MACxB,CAAE;MAAAK,QAAA,EACH;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETrB,OAAA,CAACJ,SAAS;MACRqC,MAAM,EAAE9B,cAAe;MACvBE,QAAQ,EAAEA,QAAS;MACnB6B,WAAW,EAAE,KAAM,CAAC;MAAA;MACpB/B,cAAc,EAAEA,cAAe,CAAC;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ;AAACf,EAAA,CAtDQL,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAwDjB,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}